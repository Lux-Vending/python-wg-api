name: Build and test

on: [push, pull_request]

jobs:
  build-and-test:
    name: Build and test (Python ${{ matrix.python-version }})

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v4
    - name: Install Wireguard
      run: sudo apt update && sudo apt install wireguard
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build shared library
      run: make
    - name: Install dependencies
      run: |
        sudo python -m pip install --upgrade pip
        sudo python -m pip install -r test_requirements.txt
        if [ -f requirements.txt ]; then sudo pip install -r requirements.txt; fi
    - name: Test with pytest
      run: |
        sudo pytest --junit-xml pytest.xml --cov-report term-missing --cov-fail-under=90 --cov=python_wireguard tests/
    - name: Upload Unit Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Unit Test Results (Python ${{ matrix.python-version }})
        path: pytest.xml

  publish-test-results:
    name: "Publish Unit Tests Results"
    needs: build-and-test
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: artifacts/**/*.xml
