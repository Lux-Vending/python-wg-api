name: Build debian package

on:
  push:
#    paths:
#      - 'Release_notes.txt'
#      - 'test_action'
    branches:
      - 'main'

env:
  RELEASE_VERSION: '0.3.2'
  ARCH: 'all'
  MAINTAINER: 'bofh@bitaccess.co'
  DESC: 'bitaccess wireguard api'

jobs:
  build-dev-package:
    name: Build debian package
    if: github.ref_type == 'branch'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            codename: focal
            major: 20
          - os: ubuntu-22.04
            codename: jammy
            major: 22
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Extract branch name
        shell: bash
        #run: echo "branch=$(echo ${GITHUB_REF_NAME//\//_})" >> $GITHUB_OUTPUT
        #id: extract_branch
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF_NAME//\//_})"
        id: extract_branch

      - name: Set up Python
        uses: actions/setup-python@v5
        id: pythonversion
        with:
          #python-version: '3.5.2' #ubuntu 16
          #python-version: '3.8.10' #ubuntu 20
          #python-version: '3.8' #ubuntu 20
          #python-version: "3.8.0 - 3.10.0"
          python-version: ">=3.8"
      - run: echo 'python version is; ${{ steps.pythonversion.outputs.python-version }}'

      - name: Build shared library
        run: make

      - name: Install dependencies
        run: |
          #sudo apt install -y python3-venv
          #python -m pip install --user --upgrade build
          python -m pip install --upgrade pip
          pip install build

      - name: Setup some variables
        run: |
          echo "APP_NAME=${GITHUB_REPOSITORY#*\/}"  >> $GITHUB_ENV

      - name: Set package filename env variable
        run: |
          pkg_file_name=python-wg-api_*${{ matrix.codename }}${{ matrix.major }}_all.deb
          echo "PKG_FILE_NAME=$pkg_file_name" >> $GITHUB_ENV
          DSTDIR=".debpkg/usr/lib/python3/dist-packages/"
          echo DSTDIR="$DSTDIR" >>$GITHUB_ENV
          echo "DSTDIR=$DSTDIR"

      - name: Debug output
        run: |
          echo pwd
          pwd
          echo ls -alh
          ls -alh
          echo

      - name: Prep the code
        run: |
          python3 -m build
          PKGFILE=$(eval ls dist/python_wg_api*whl)
          mkdir -p $DSTDIR
          sudo python3 -m pip install $PKGFILE --target $DSTDIR
          sudo chown -R root:root $DSTDIR
          find $DSTDIR -ls
          
          echo
          echo "package: ${{ env.APP_NAME }}"
          echo "package_root: .debpkg"
          echo "maintainer: ${{ env.MAINTAINER }}"
          echo "version: ${{ env.RELEASE_VERSION }}${{ matrix.codename }}${{ matrix.major }}"
          echo "arch: ${{ env.ARCH }}"
          echo "desc: ${{ env.DESC }}"

      - name: build
        id: build
        uses: jiro4989/build-deb-action@v2
        with:
          package: ${{ env.APP_NAME }}
          package_root: .debpkg
          maintainer: ${{ env.MAINTAINER }}
          version: ${{ env.RELEASE_VERSION }}${{ matrix.codename }}${{ matrix.major }}
          arch: ${{ env.ARCH }}
          depends: 'python3 (>=3.8)'
          desc: ${{ env.DESC }}

      - name: verify
        run: |
          echo pwd
          pwd
          echo
          echo ls -l
          ls -l
          echo
          echo "dpkg -c python-wg-api*.deb"
          dpkg -c python-wg-api*.deb
          echo
          echo "ls -l $PKG_FILE_NAME"
          ls -l $PKG_FILE_NAME

      # scp the deb package to the package repo
      - name: upload file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEB_REPO_HOST }}
          username: ${{ secrets.DEB_REPO_USERNAME }}
          key: ${{ secrets.DEB_REPO_KEY }}
          source: ${{env.PKG_FILE_NAME}}
          target: ${{ secrets.DEB_REPO_PATH }}/${{ steps.extract_branch.outputs.branch }}
